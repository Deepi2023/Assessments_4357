# -*- coding: utf-8 -*-
"""LVADSUSR149_DEEPIKA_MURUGAN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1foWAGq2G3oRzHCXCGAD7zGVhKw_phPZY
"""

#1
import numpy as np
arr=np.array([70,80,90,100,43,56])
mean_=np.mean(arr)
median=np.median(arr)
standard_deviation=np.std(arr)
print(f"The mean is {mean_}")
print(f"The median is {median}")
print(f"The standard_deviation is {standard_deviation}")

#2
health_data = np.array([[160, 70, 30],
                        [165, 65, 35],
                        [170, 75, 40]])

#3
student=np.array([[90,80,70,60,50],
                 [50,45,78,99,78],
                 [87,78,83,67,91]])
arr=student[:,2:]
sum=np.sum(arr,axis=1)
print(sum/ student.ndim)

#4
arr=np.linspace(15,25,24)
print(arr)

#5
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
arr=daily_closing_prices.copy()
print("Moving average for every 5 days")
for i in range(0,len(arr)):
  print(np.sum(arr[i:i+5]))

#6
mean=np.array([0,0])
covariance=np.array([[1,0.5],[0.5,2]])
print(mean*covariance)

#7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
arr=properties_matrix[1:,1:]
print(f"The determinant of properties_matrix is {arr}")

#8
arr=np.array([5,4,3,7,8,9])
bool_=arr<=5
print(bool_)
filtered_array=arr[bool_]
print("filtered out the number which are greater than 5")
print(filtered_array)

#9
import pandas as pd
df = pd.DataFrame({'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']})
filtered_data=df[df['Age']<45]
filtered_1 =df[df['Department']!='HR']
print(filtered_data['Name'])

#10
df = pd.DataFrame({'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]})
df['Average']=df['Sales'].mean(skipna=True)
print(df)

#11
11.
df =pd.DataFrame({
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
})

var=df['Price'].mean(skipna=True)
print(var)
filtered=df[df['Price']> var]
print(filtered)

#12 NA

#13
df=pd.read_csv('/content/sample_data/Q13_sports_team_stats.csv')
df['Average_score']=df['Wins'].mean(skipna=True)
print(df)

#14
df=pd.read_csv('/content/sample_data/Q14_customer_purchases.csv')
print(df)

#15
df=pd.read_csv('/content/sample_data/Q15_student_grades.csv')
var=df.groupby(['StudentID','Subject']).aggregate({"Grade":['sum']})
print("It gives the subject wise total")
print(var)