# -*- coding: utf-8 -*-
"""LVADSUSR149DEEPIKA MURUGAN_LOGISTICS.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E02hD2UyKTTqiRgJa_9sqOMZKlTuOC0S
"""

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
import seaborn as sns
# import statsmodels.api as sm

from sklearn.preprocessing import MinMaxScaler,StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import LogisticRegression
from sklearn.impute import KNNImputer
from sklearn.preprocessing import LabelEncoder
label_encoder = LabelEncoder()

from sklearn.metrics import r2_score,mean_squared_error
from sklearn.metrics import accuracy_score,classification_report,confusion_matrix

df=pd.read_csv('/content/sample_data/booking.csv')
df.head(10)

#Handling Missing Value and Outliers
df.isnull().sum()

#room type and average price is having null values
df['room type']=df['room type'].fillna(df['room type'].mode()[0])
#imputation for average price
imputer=KNNImputer()
df['average price']=imputer.fit_transform(df[['average price']])
df.isnull().sum()

df.duplicated().sum()

#checking for outliers in data
numerical_columns = df.select_dtypes(include=['float64', 'int64']).columns
for column in numerical_columns:
    plt.figure(figsize=(10, 6))
    sns.boxplot(x=df[column])
    plt.title(f'Box Plot of {column}')
    plt.xlabel(column)
    plt.show()

q1=df['number of weekend nights'].quantile(0.25)
q3=df['number of weekend nights'].quantile(0.75)
iqr=q3-q1
lower=q1-1.5*iqr
upper=q3+1.5*iqr
new_df=df.loc[(df['number of weekend nights']>lower) & (df['number of weekend nights']<upper)]

new_df

#Encoding categorical data
for i in new_df.columns:
  if new_df[i].dtype==np.number:
    continue
  new_df[i]=label_encoder.fit_transform(new_df[i])

new_df

#Feature selection and cleaning
numerical_columns = new_df.select_dtypes(include=['float64', 'int64']).columns
# Compute the correlation matrix for numerical variables
correlation_matrix = new_df[numerical_columns].corr()
print("Correlation matrix:\n", correlation_matrix)

x=new_df.drop(columns=['booking status','Booking_ID','date of reservation',''],axis='columns')
x=StandardScaler().fit_transform(x)

x
y=new_df['booking status']

df.info()

#data splitting
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=30)
model=LogisticRegression()
model.fit(x_train,y_train)
y_pred=model.predict(x_test)
y_pred

#Model Evaluation
accuracy=accuracy_score(y_test,y_pred)
report=classification_report(y_test,y_pred)
cm=confusion_matrix(y_test,y_pred)
print("Accuracy of the model",accuracy)
print("Classification_report",report)
print("Confusion matrix of this model",cm)